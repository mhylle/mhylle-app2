{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { HelloWorld } from '../../hello-world/hello-world';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/message.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/chips\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nfunction DashboardComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \\u274C \", ctx_r1.error, \" \");\n  }\n}\nfunction DashboardComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Loading messages... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtext(1, \" No messages yet. Add the first one to test database connectivity! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_41_mat_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card\", 32)(1, \"mat-card-content\")(2, \"div\", 33)(3, \"div\")(4, \"strong\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"small\", 34);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\", 35);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_41_mat_card_1_Template_button_click_11_listener() {\n      const message_r4 = i0.ɵɵrestoreView(_r3).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.deleteMessage(message_r4.id));\n    });\n    i0.ɵɵelementStart(12, \"mat-icon\");\n    i0.ɵɵtext(13, \"delete\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const message_r4 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(message_r4.author || \"Anonymous\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(8, 3, message_r4.createdAt, \"medium\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(message_r4.content);\n  }\n}\nfunction DashboardComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, DashboardComponent_div_41_mat_card_1_Template, 14, 6, \"mat-card\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.messages);\n  }\n}\nfunction DashboardComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵtext(1, \" \\u2705 \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"Database connectivity confirmed!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" Successfully retrieving \", ctx_r1.messages.length, \" message(s) from PostgreSQL. \");\n  }\n}\nfunction DashboardComponent_mat_card_95_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 38)(1, \"mat-card-header\")(2, \"mat-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-subtitle\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-chip-listbox\")(10, \"mat-chip\", 39);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const task_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r5.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", task_r5.priority, \" Priority\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r5.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"color\", ctx_r1.getStatusColor(task_r5.status));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", task_r5.status, \" \");\n  }\n}\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    messageService;\n    totalTasks = 0;\n    completedTasks = 0;\n    inProgressTasks = 0;\n    highPriorityTasks = 0;\n    // Message functionality\n    messages = [];\n    newMessage = {\n      content: '',\n      author: ''\n    };\n    loading = false;\n    error = '';\n    recentTasks = [{\n      id: 1,\n      title: 'Setup Development Environment',\n      description: 'Configure Docker and development tools',\n      status: 'In Progress',\n      priority: 'High'\n    }, {\n      id: 2,\n      title: 'Design Database Schema',\n      description: 'Create tables for task management',\n      status: 'Completed',\n      priority: 'Medium'\n    }, {\n      id: 3,\n      title: 'Implement Authentication',\n      description: 'Add user login and registration',\n      status: 'Pending',\n      priority: 'High'\n    }];\n    constructor(messageService) {\n      this.messageService = messageService;\n    }\n    ngOnInit() {\n      this.calculateStats();\n      this.loadMessages();\n    }\n    calculateStats() {\n      this.totalTasks = this.recentTasks.length;\n      this.completedTasks = this.recentTasks.filter(task => task.status === 'Completed').length;\n      this.inProgressTasks = this.recentTasks.filter(task => task.status === 'In Progress').length;\n      this.highPriorityTasks = this.recentTasks.filter(task => task.priority === 'High').length;\n    }\n    getStatusColor(status) {\n      switch (status) {\n        case 'Completed':\n          return 'primary';\n        case 'In Progress':\n          return 'accent';\n        case 'Pending':\n          return 'warn';\n        default:\n          return '';\n      }\n    }\n    // Message management methods\n    loadMessages() {\n      this.loading = true;\n      this.error = '';\n      this.messageService.getAllMessages().subscribe({\n        next: messages => {\n          this.messages = messages;\n          this.loading = false;\n        },\n        error: error => {\n          console.error('Error loading messages:', error);\n          this.error = 'Error loading messages. Please check if the backend is running.';\n          this.loading = false;\n        }\n      });\n    }\n    onSubmit() {\n      if (!this.newMessage.content?.trim()) {\n        this.error = 'Please enter a message';\n        return;\n      }\n      this.loading = true;\n      this.error = '';\n      const messageToSend = {\n        content: this.newMessage.content.trim(),\n        author: this.newMessage.author?.trim() || 'Anonymous'\n      };\n      this.messageService.createMessage(messageToSend).subscribe({\n        next: savedMessage => {\n          this.messages.unshift(savedMessage);\n          this.newMessage = {\n            content: '',\n            author: ''\n          };\n          this.loading = false;\n        },\n        error: error => {\n          console.error('Error saving message:', error);\n          this.error = 'Error saving message. Please try again.';\n          this.loading = false;\n        }\n      });\n    }\n    deleteMessage(id) {\n      if (!confirm('Are you sure you want to delete this message?')) {\n        return;\n      }\n      this.messageService.deleteMessage(id).subscribe({\n        next: () => {\n          this.messages = this.messages.filter(m => m.id !== id);\n        },\n        error: error => {\n          console.error('Error deleting message:', error);\n          this.error = 'Error deleting message. Please try again.';\n        }\n      });\n    }\n    static ɵfac = function DashboardComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DashboardComponent)(i0.ɵɵdirectiveInject(i1.MessageService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 96,\n      vars: 15,\n      consts: [[\"messageForm\", \"ngForm\"], [1, \"dashboard-container\"], [1, \"database-test-section\"], [1, \"message-form\"], [3, \"ngSubmit\"], [\"appearance\", \"outline\", 2, \"width\", \"200px\", \"margin-right\", \"10px\"], [\"matInput\", \"\", \"name\", \"author\", \"placeholder\", \"Optional\", 3, \"ngModelChange\", \"ngModel\"], [\"appearance\", \"outline\", 2, \"width\", \"300px\", \"margin-right\", \"10px\"], [\"matInput\", \"\", \"name\", \"content\", \"required\", \"\", \"rows\", \"2\", \"placeholder\", \"Enter a test message...\", 3, \"ngModelChange\", \"ngModel\"], [2, \"margin-top\", \"10px\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [\"mat-stroked-button\", \"\", \"type\", \"button\", 2, \"margin-left\", \"10px\", 3, \"click\", \"disabled\"], [\"class\", \"error-message\", \"style\", \"color: red; margin-top: 10px;\", 4, \"ngIf\"], [1, \"messages-display\", 2, \"margin-top\", \"20px\"], [\"style\", \"text-align: center; padding: 20px;\", 4, \"ngIf\"], [\"style\", \"text-align: center; padding: 20px; color: #666;\", 4, \"ngIf\"], [\"class\", \"messages-list\", 4, \"ngIf\"], [\"style\", \"margin-top: 15px; padding: 10px; background-color: #e8f5e8; border-radius: 4px;\", 4, \"ngIf\"], [1, \"stats-grid\"], [1, \"stat-card\"], [1, \"stat-number\"], [1, \"actions-section\"], [1, \"action-buttons\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"routerLink\", \"/tasks/new\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", \"routerLink\", \"/tasks\"], [1, \"recent-tasks\"], [\"class\", \"task-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"error-message\", 2, \"color\", \"red\", \"margin-top\", \"10px\"], [2, \"text-align\", \"center\", \"padding\", \"20px\"], [2, \"text-align\", \"center\", \"padding\", \"20px\", \"color\", \"#666\"], [1, \"messages-list\"], [\"style\", \"margin-bottom: 10px;\", 4, \"ngFor\", \"ngForOf\"], [2, \"margin-bottom\", \"10px\"], [2, \"display\", \"flex\", \"justify-content\", \"space-between\", \"align-items\", \"start\"], [2, \"color\", \"#666\", \"margin-left\", \"10px\"], [2, \"margin\", \"5px 0\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", 3, \"click\"], [2, \"margin-top\", \"15px\", \"padding\", \"10px\", \"background-color\", \"#e8f5e8\", \"border-radius\", \"4px\"], [1, \"task-card\"], [\"selected\", \"\", 3, \"color\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1);\n          i0.ɵɵelement(1, \"app-hello-world\");\n          i0.ɵɵelementStart(2, \"h1\");\n          i0.ɵɵtext(3, \"Task Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"mat-card\", 2)(5, \"mat-card-header\")(6, \"mat-icon\");\n          i0.ɵɵtext(7, \"storage\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"mat-card-title\");\n          i0.ɵɵtext(9, \"\\uD83D\\uDD17 Database Connectivity Test\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"mat-card-subtitle\");\n          i0.ɵɵtext(11, \"Verify \\\"hole through\\\" to PostgreSQL database\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"mat-card-content\")(13, \"div\", 3)(14, \"h4\");\n          i0.ɵɵtext(15, \"\\uD83D\\uDCDD Test Data Entry\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"form\", 4, 0);\n          i0.ɵɵlistener(\"ngSubmit\", function DashboardComponent_Template_form_ngSubmit_16_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onSubmit());\n          });\n          i0.ɵɵelementStart(18, \"mat-form-field\", 5)(19, \"mat-label\");\n          i0.ɵɵtext(20, \"Your Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"input\", 6);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_21_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.newMessage.author, $event) || (ctx.newMessage.author = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(22, \"mat-form-field\", 7)(23, \"mat-label\");\n          i0.ɵɵtext(24, \"Test Message\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"textarea\", 8);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_Template_textarea_ngModelChange_25_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.newMessage.content, $event) || (ctx.newMessage.content = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(26, \"div\", 9)(27, \"button\", 10)(28, \"mat-icon\");\n          i0.ɵɵtext(29, \"save\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(30);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_31_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.loadMessages());\n          });\n          i0.ɵɵelementStart(32, \"mat-icon\");\n          i0.ɵɵtext(33, \"refresh\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(34, \" Refresh \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(35, DashboardComponent_div_35_Template, 2, 1, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"div\", 13)(37, \"h4\");\n          i0.ɵɵtext(38, \"\\uD83D\\uDCCB Saved Messages from Database\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(39, DashboardComponent_div_39_Template, 2, 0, \"div\", 14)(40, DashboardComponent_div_40_Template, 2, 0, \"div\", 15)(41, DashboardComponent_div_41_Template, 2, 1, \"div\", 16)(42, DashboardComponent_div_42_Template, 5, 1, \"div\", 17);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(43, \"div\", 18)(44, \"mat-card\", 19)(45, \"mat-card-header\")(46, \"mat-icon\");\n          i0.ɵɵtext(47, \"assignment\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(48, \"mat-card-title\");\n          i0.ɵɵtext(49, \"Total Tasks\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(50, \"mat-card-content\")(51, \"span\", 20);\n          i0.ɵɵtext(52);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(53, \"mat-card\", 19)(54, \"mat-card-header\")(55, \"mat-icon\");\n          i0.ɵɵtext(56, \"check_circle\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(57, \"mat-card-title\");\n          i0.ɵɵtext(58, \"Completed\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(59, \"mat-card-content\")(60, \"span\", 20);\n          i0.ɵɵtext(61);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(62, \"mat-card\", 19)(63, \"mat-card-header\")(64, \"mat-icon\");\n          i0.ɵɵtext(65, \"schedule\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(66, \"mat-card-title\");\n          i0.ɵɵtext(67, \"In Progress\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(68, \"mat-card-content\")(69, \"span\", 20);\n          i0.ɵɵtext(70);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(71, \"mat-card\", 19)(72, \"mat-card-header\")(73, \"mat-icon\");\n          i0.ɵɵtext(74, \"priority_high\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(75, \"mat-card-title\");\n          i0.ɵɵtext(76, \"High Priority\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(77, \"mat-card-content\")(78, \"span\", 20);\n          i0.ɵɵtext(79);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(80, \"div\", 21)(81, \"h2\");\n          i0.ɵɵtext(82, \"Quick Actions\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(83, \"div\", 22)(84, \"button\", 23)(85, \"mat-icon\");\n          i0.ɵɵtext(86, \"add\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(87, \" New Task \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(88, \"button\", 24)(89, \"mat-icon\");\n          i0.ɵɵtext(90, \"list\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(91, \" View All Tasks \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(92, \"div\", 25)(93, \"h2\");\n          i0.ɵɵtext(94, \"Recent Tasks\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(95, DashboardComponent_mat_card_95_Template, 12, 5, \"mat-card\", 26);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(21);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newMessage.author);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newMessage.content);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loading || !(ctx.newMessage.content == null ? null : ctx.newMessage.content.trim()));\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Saving...\" : \"Save to Database\", \" \");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.messages.length === 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.messages.length > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.messages.length > 0);\n          i0.ɵɵadvance(10);\n          i0.ɵɵtextInterpolate(ctx.totalTasks);\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate(ctx.completedTasks);\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate(ctx.inProgressTasks);\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate(ctx.highPriorityTasks);\n          i0.ɵɵadvance(16);\n          i0.ɵɵproperty(\"ngForOf\", ctx.recentTasks);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, i2.NgIf, i2.DatePipe, RouterModule, i3.RouterLink, FormsModule, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, MatButtonModule, i5.MatButton, i5.MatIconButton, MatIconModule, i6.MatIcon, MatCardModule, i7.MatCard, i7.MatCardContent, i7.MatCardHeader, i7.MatCardSubtitle, i7.MatCardTitle, MatChipsModule, i8.MatChip, i8.MatChipListbox, MatFormFieldModule, i9.MatFormField, i9.MatLabel, MatInputModule, i10.MatInput, HelloWorld],\n      styles: [\".dashboard-container[_ngcontent-%COMP%]{max-width:1200px;margin:0 auto;padding:24px}h1[_ngcontent-%COMP%]{color:#1976d2;margin-bottom:32px;text-align:center}h2[_ngcontent-%COMP%]{color:#424242;margin:32px 0 16px}.stats-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(250px,1fr));gap:16px;margin-bottom:32px}.stat-card[_ngcontent-%COMP%]{text-align:center}.stat-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]{justify-content:center;padding-bottom:8px}.stat-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{font-size:32px;height:32px;width:32px;margin-right:8px;color:#1976d2}.stat-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]   mat-card-title[_ngcontent-%COMP%]{margin:0;font-size:1rem}.stat-card[_ngcontent-%COMP%]   .stat-number[_ngcontent-%COMP%]{font-size:2.5rem;font-weight:600;color:#1976d2}.actions-section[_ngcontent-%COMP%]{margin:32px 0}.actions-section[_ngcontent-%COMP%]   .action-buttons[_ngcontent-%COMP%]{display:flex;gap:16px;flex-wrap:wrap}.actions-section[_ngcontent-%COMP%]   .action-buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{min-width:150px}.actions-section[_ngcontent-%COMP%]   .action-buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{margin-right:8px}.recent-tasks[_ngcontent-%COMP%]{margin-top:32px}.recent-tasks[_ngcontent-%COMP%]   .task-card[_ngcontent-%COMP%]{margin-bottom:16px}.recent-tasks[_ngcontent-%COMP%]   .task-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]{padding-bottom:8px}.recent-tasks[_ngcontent-%COMP%]   .task-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]   mat-card-title[_ngcontent-%COMP%]{color:#1976d2}.recent-tasks[_ngcontent-%COMP%]   .task-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]   mat-card-subtitle[_ngcontent-%COMP%]{color:#666}.recent-tasks[_ngcontent-%COMP%]   .task-card[_ngcontent-%COMP%]   mat-card-content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:8px 0 16px;color:#424242}.recent-tasks[_ngcontent-%COMP%]   .task-card[_ngcontent-%COMP%]   mat-card-content[_ngcontent-%COMP%]   mat-chip-listbox[_ngcontent-%COMP%]   mat-chip[_ngcontent-%COMP%]{font-size:.75rem}@media (max-width: 768px){.dashboard-container[_ngcontent-%COMP%]{padding:16px}.stats-grid[_ngcontent-%COMP%]{grid-template-columns:1fr}.action-buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{min-width:120px}}@media (max-width: 480px){.action-buttons[_ngcontent-%COMP%]{flex-direction:column}.action-buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%}}\"]\n    });\n  }\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}