{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { HelloWorld } from '../../hello-world/hello-world';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/chips\";\nfunction DashboardComponent_mat_card_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 10)(1, \"mat-card-header\")(2, \"mat-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-subtitle\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-chip-listbox\")(10, \"mat-chip\", 11);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", task_r1.priority, \" Priority\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r1.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"color\", ctx_r1.getStatusColor(task_r1.status));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", task_r1.status, \" \");\n  }\n}\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    totalTasks = 0;\n    completedTasks = 0;\n    inProgressTasks = 0;\n    highPriorityTasks = 0;\n    recentTasks = [{\n      id: 1,\n      title: 'Setup Development Environment',\n      description: 'Configure Docker and development tools',\n      status: 'In Progress',\n      priority: 'High'\n    }, {\n      id: 2,\n      title: 'Design Database Schema',\n      description: 'Create tables for task management',\n      status: 'Completed',\n      priority: 'Medium'\n    }, {\n      id: 3,\n      title: 'Implement Authentication',\n      description: 'Add user login and registration',\n      status: 'Pending',\n      priority: 'High'\n    }];\n    constructor() {}\n    ngOnInit() {\n      this.calculateStats();\n    }\n    calculateStats() {\n      this.totalTasks = this.recentTasks.length;\n      this.completedTasks = this.recentTasks.filter(task => task.status === 'Completed').length;\n      this.inProgressTasks = this.recentTasks.filter(task => task.status === 'In Progress').length;\n      this.highPriorityTasks = this.recentTasks.filter(task => task.priority === 'High').length;\n    }\n    getStatusColor(status) {\n      switch (status) {\n        case 'Completed':\n          return 'primary';\n        case 'In Progress':\n          return 'accent';\n        case 'Pending':\n          return 'warn';\n        default:\n          return '';\n      }\n    }\n    static ɵfac = function DashboardComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DashboardComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 57,\n      vars: 5,\n      consts: [[1, \"dashboard-container\"], [1, \"stats-grid\"], [1, \"stat-card\"], [1, \"stat-number\"], [1, \"actions-section\"], [1, \"action-buttons\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"routerLink\", \"/tasks/new\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", \"routerLink\", \"/tasks\"], [1, \"recent-tasks\"], [\"class\", \"task-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"task-card\"], [\"selected\", \"\", 3, \"color\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"app-hello-world\");\n          i0.ɵɵelementStart(2, \"h1\");\n          i0.ɵɵtext(3, \"Task Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 1)(5, \"mat-card\", 2)(6, \"mat-card-header\")(7, \"mat-icon\");\n          i0.ɵɵtext(8, \"assignment\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"mat-card-title\");\n          i0.ɵɵtext(10, \"Total Tasks\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"mat-card-content\")(12, \"span\", 3);\n          i0.ɵɵtext(13);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(14, \"mat-card\", 2)(15, \"mat-card-header\")(16, \"mat-icon\");\n          i0.ɵɵtext(17, \"check_circle\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"mat-card-title\");\n          i0.ɵɵtext(19, \"Completed\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(20, \"mat-card-content\")(21, \"span\", 3);\n          i0.ɵɵtext(22);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(23, \"mat-card\", 2)(24, \"mat-card-header\")(25, \"mat-icon\");\n          i0.ɵɵtext(26, \"schedule\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"mat-card-title\");\n          i0.ɵɵtext(28, \"In Progress\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(29, \"mat-card-content\")(30, \"span\", 3);\n          i0.ɵɵtext(31);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(32, \"mat-card\", 2)(33, \"mat-card-header\")(34, \"mat-icon\");\n          i0.ɵɵtext(35, \"priority_high\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"mat-card-title\");\n          i0.ɵɵtext(37, \"High Priority\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(38, \"mat-card-content\")(39, \"span\", 3);\n          i0.ɵɵtext(40);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(41, \"div\", 4)(42, \"h2\");\n          i0.ɵɵtext(43, \"Quick Actions\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(44, \"div\", 5)(45, \"button\", 6)(46, \"mat-icon\");\n          i0.ɵɵtext(47, \"add\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(48, \" New Task \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(49, \"button\", 7)(50, \"mat-icon\");\n          i0.ɵɵtext(51, \"list\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(52, \" View All Tasks \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(53, \"div\", 8)(54, \"h2\");\n          i0.ɵɵtext(55, \"Recent Tasks\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(56, DashboardComponent_mat_card_56_Template, 12, 5, \"mat-card\", 9);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(13);\n          i0.ɵɵtextInterpolate(ctx.totalTasks);\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate(ctx.completedTasks);\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate(ctx.inProgressTasks);\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate(ctx.highPriorityTasks);\n          i0.ɵɵadvance(16);\n          i0.ɵɵproperty(\"ngForOf\", ctx.recentTasks);\n        }\n      },\n      dependencies: [CommonModule, i1.NgForOf, RouterModule, i2.RouterLink, MatButtonModule, i3.MatButton, MatIconModule, i4.MatIcon, MatCardModule, i5.MatCard, i5.MatCardContent, i5.MatCardHeader, i5.MatCardSubtitle, i5.MatCardTitle, MatChipsModule, i6.MatChip, i6.MatChipListbox, HelloWorld],\n      styles: [\".dashboard-container[_ngcontent-%COMP%]{max-width:1200px;margin:0 auto;padding:24px}h1[_ngcontent-%COMP%]{color:#1976d2;margin-bottom:32px;text-align:center}h2[_ngcontent-%COMP%]{color:#424242;margin:32px 0 16px}.stats-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(250px,1fr));gap:16px;margin-bottom:32px}.stat-card[_ngcontent-%COMP%]{text-align:center}.stat-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]{justify-content:center;padding-bottom:8px}.stat-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{font-size:32px;height:32px;width:32px;margin-right:8px;color:#1976d2}.stat-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]   mat-card-title[_ngcontent-%COMP%]{margin:0;font-size:1rem}.stat-card[_ngcontent-%COMP%]   .stat-number[_ngcontent-%COMP%]{font-size:2.5rem;font-weight:600;color:#1976d2}.actions-section[_ngcontent-%COMP%]{margin:32px 0}.actions-section[_ngcontent-%COMP%]   .action-buttons[_ngcontent-%COMP%]{display:flex;gap:16px;flex-wrap:wrap}.actions-section[_ngcontent-%COMP%]   .action-buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{min-width:150px}.actions-section[_ngcontent-%COMP%]   .action-buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{margin-right:8px}.recent-tasks[_ngcontent-%COMP%]{margin-top:32px}.recent-tasks[_ngcontent-%COMP%]   .task-card[_ngcontent-%COMP%]{margin-bottom:16px}.recent-tasks[_ngcontent-%COMP%]   .task-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]{padding-bottom:8px}.recent-tasks[_ngcontent-%COMP%]   .task-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]   mat-card-title[_ngcontent-%COMP%]{color:#1976d2}.recent-tasks[_ngcontent-%COMP%]   .task-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]   mat-card-subtitle[_ngcontent-%COMP%]{color:#666}.recent-tasks[_ngcontent-%COMP%]   .task-card[_ngcontent-%COMP%]   mat-card-content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:8px 0 16px;color:#424242}.recent-tasks[_ngcontent-%COMP%]   .task-card[_ngcontent-%COMP%]   mat-card-content[_ngcontent-%COMP%]   mat-chip-listbox[_ngcontent-%COMP%]   mat-chip[_ngcontent-%COMP%]{font-size:.75rem}@media (max-width: 768px){.dashboard-container[_ngcontent-%COMP%]{padding:16px}.stats-grid[_ngcontent-%COMP%]{grid-template-columns:1fr}.action-buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{min-width:120px}}@media (max-width: 480px){.action-buttons[_ngcontent-%COMP%]{flex-direction:column}.action-buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%}}\"]\n    });\n  }\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}