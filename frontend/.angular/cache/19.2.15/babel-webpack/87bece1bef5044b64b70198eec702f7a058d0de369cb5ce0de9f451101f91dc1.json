{"ast":null,"code":"import _asyncToGenerator from \"/home/mhylle/projects/mhylle.com/example-app2/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    currentUserSubject = new BehaviorSubject(null);\n    currentUser$ = this.currentUserSubject.asObservable();\n    constructor() {\n      // Check for existing session on app startup\n      this.validateSession();\n    }\n    validateSession() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        try {\n          const response = yield fetch('/api/auth/validate', {\n            credentials: 'include' // Include cookies\n          });\n          if (response.ok) {\n            const result = yield response.json();\n            const user = result.data;\n            _this.currentUserSubject.next(user);\n            return user;\n          }\n        } catch (error) {\n          console.error('Session validation failed:', error);\n        }\n        _this.currentUserSubject.next(null);\n        return null;\n      })();\n    }\n    login(credentials) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        const response = yield fetch('/api/auth/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          // Include cookies\n          body: JSON.stringify(credentials)\n        });\n        if (!response.ok) {\n          const error = yield response.json();\n          throw new Error(error.error?.message || 'Login failed');\n        }\n        const result = yield response.json();\n        const user = result.data;\n        _this2.currentUserSubject.next(user);\n        return user;\n      })();\n    }\n    logout() {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          yield fetch('/api/auth/logout', {\n            method: 'POST',\n            credentials: 'include'\n          });\n        } catch (error) {\n          console.error('Logout error:', error);\n        }\n        _this3.currentUserSubject.next(null);\n      })();\n    }\n    getCurrentUser() {\n      return this.currentUserSubject.value;\n    }\n    isAuthenticated() {\n      return this.getCurrentUser() !== null;\n    }\n    hasAppAccess(appId) {\n      const user = this.getCurrentUser();\n      return user?.permissions.apps.includes(appId) || false;\n    }\n    hasRole(appId, role) {\n      const user = this.getCurrentUser();\n      return user?.permissions.roles[appId]?.includes(role) || false;\n    }\n    static ɵfac = function AuthService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthService)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}