{"ast":null,"code":"import _asyncToGenerator from \"/home/mhylle/projects/mhylle.com/example-app2/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    authService;\n    router;\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n    }\n    canActivate() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        // Check if user is authenticated\n        let user = _this.authService.getCurrentUser();\n        // If no user, try to validate session\n        if (!user) {\n          user = yield _this.authService.validateSession();\n        }\n        if (user) {\n          // Check if user has access to this app\n          if (_this.authService.hasAppAccess('app2')) {\n            return true;\n          } else {\n            // User is authenticated but doesn't have app access\n            _this.router.navigate(['/access-denied']);\n            return false;\n          }\n        }\n        // Not authenticated - show login\n        _this.showLogin();\n        return false;\n      })();\n    }\n    showLogin() {\n      // Trigger login modal\n      const event = new CustomEvent('show-login');\n      window.dispatchEvent(event);\n    }\n    static ɵfac = function AuthGuard_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}