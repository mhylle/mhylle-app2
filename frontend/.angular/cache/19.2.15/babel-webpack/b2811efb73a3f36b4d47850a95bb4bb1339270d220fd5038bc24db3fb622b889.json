{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    authService;\n    constructor(authService) {\n      this.authService = authService;\n    }\n    intercept(req, next) {\n      // Add credentials to all requests (for cookies)\n      const authReq = req.clone({\n        setHeaders: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      return next.handle(authReq).pipe(catchError(error => {\n        if (error.status === 401) {\n          // Unauthorized - clear user and show login\n          this.authService.logout();\n          const event = new CustomEvent('show-login');\n          window.dispatchEvent(event);\n        }\n        return throwError(() => error);\n      }));\n    }\n    static ɵfac = function AuthInterceptor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthInterceptor)(i0.ɵɵinject(i1.AuthService));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthInterceptor,\n      factory: AuthInterceptor.ɵfac\n    });\n  }\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}